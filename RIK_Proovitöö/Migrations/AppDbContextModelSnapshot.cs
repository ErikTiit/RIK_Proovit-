// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace RIK_Proovitöö.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RIK_Proovitöö.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttendeeAmount")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraInfo")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<int>("RegisteryCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AttendeeAmount = 10,
                            CompanyName = "Company 1",
                            ExtraInfo = "Test extra info 1",
                            PaymentType = 0,
                            RegisteryCode = 123456
                        },
                        new
                        {
                            Id = 2,
                            AttendeeAmount = 20,
                            CompanyName = "Company 2",
                            ExtraInfo = "Test extra info 2",
                            PaymentType = 1,
                            RegisteryCode = 654321
                        });
                });

            modelBuilder.Entity("RIK_Proovitöö.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraInfo")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExtraInfo = "Test extra info 1",
                            Location = "Location 1",
                            Name = "Event 1"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExtraInfo = "Test extra info 2",
                            Location = "Location 2",
                            Name = "Event 2"
                        });
                });

            modelBuilder.Entity("RIK_Proovitöö.Models.EventAttendee", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("IndividualId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IndividualId");

                    b.ToTable("EventAttendees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventId = 1,
                            IndividualId = 1
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            EventId = 1
                        });
                });

            modelBuilder.Entity("RIK_Proovitöö.Models.Individual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ExtraInfo")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<int>("PersonalCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Individuals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExtraInfo = "Test extra info 1",
                            FirstName = "John",
                            LastName = "Doe",
                            PaymentType = 0,
                            PersonalCode = 123456
                        },
                        new
                        {
                            Id = 2,
                            ExtraInfo = "Test extra info 2",
                            FirstName = "Jane",
                            LastName = "Doe",
                            PaymentType = 1,
                            PersonalCode = 654321
                        });
                });

            modelBuilder.Entity("RIK_Proovitöö.Models.EventAttendee", b =>
                {
                    b.HasOne("RIK_Proovitöö.Models.Company", "Company")
                        .WithMany("EventAttendees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RIK_Proovitöö.Models.Event", "Event")
                        .WithMany("EventAttendees")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RIK_Proovitöö.Models.Individual", "Individual")
                        .WithMany("EventAttendees")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Company");

                    b.Navigation("Event");

                    b.Navigation("Individual");
                });

            modelBuilder.Entity("RIK_Proovitöö.Models.Company", b =>
                {
                    b.Navigation("EventAttendees");
                });

            modelBuilder.Entity("RIK_Proovitöö.Models.Event", b =>
                {
                    b.Navigation("EventAttendees");
                });

            modelBuilder.Entity("RIK_Proovitöö.Models.Individual", b =>
                {
                    b.Navigation("EventAttendees");
                });
#pragma warning restore 612, 618
        }
    }
}
