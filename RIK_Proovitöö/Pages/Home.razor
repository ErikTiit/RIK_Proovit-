@page "/"
@using RIK_Proovitöö.Models
@using RIK_Proovitöö.Services
@inject IEventService EventService

<h3>Events</h3>

<div class="row">
    <div class="col-md-6">
        <h4>Upcoming Events</h4>
        @if (upcomingEvents == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            foreach (var evt in upcomingEvents)
            {
                <p>@evt.Name - @evt.Date.ToString("dd.MM.yyyy") - <a href="EventDetails/@evt.ID">Details</a> - <button @onclick="() => DeleteEvent(evt.ID)">Delete</button></p>
            }
        }
    </div>

    <div class="col-md-6">
        <h4>Past Events</h4>
        @if (pastEvents == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            foreach (var evt in pastEvents)
            {
                <p>@evt.Name - @evt.Date.ToString("dd.MM.yyyy") - <a href="EventDetails/@evt.ID">Details</a></p>
            }
        }
    </div>
</div>

@code {
    private Event[]? upcomingEvents;
    private Event[]? pastEvents;

    protected override async Task OnInitializedAsync()
    {
        await LoadEvents();
    }

    private async Task LoadEvents()
    {
        var events = await EventService.GetEventsAsync();
        var currentDate = DateTime.Now;

        upcomingEvents = events?.Where(e => e.Date >= currentDate).ToArray();
        pastEvents = events?.Where(e => e.Date < currentDate).ToArray();
    }

    private async Task DeleteEvent(int id)
    {
        await EventService.DeleteEventAsync(id);
        await LoadEvents();
    }
}
