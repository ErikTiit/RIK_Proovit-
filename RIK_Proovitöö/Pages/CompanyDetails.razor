@page "/CompanyDetails/{Id}"
@using RIK_Proovitöö.Services
@inject NavigationManager NavigationManager
@inject ICompanyService CompanyService
@using RIK_Proovitöö.Models
@using Microsoft.AspNetCore.Components.Forms
@using RIK_Proovitöö.Components.DetailsBanner

<Banner/>

@if (EditableCompany == null)
{
    <p>Loading...</p>
}
else
{
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-12 col-md-8 col-lg-6">
                <EditForm Model="EditableCompany" OnSubmit="HandleSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <h4 style="color:deepskyblue">Osavõtja info</h4>
                    <div class="form-group row mb-3">
                        <label for="companyName" class="col-sm-4 col-form-label">Ettevõtte nimi:</label>
                        <div class="col-sm-8">
                            <InputText class="form-control border" id="companyName" @bind-Value="EditableCompany.CompanyName" />
                        </div>
                    </div>
                    <div class="form-group row mb-3">
                        <label for="registryCode" class="col-sm-4 col-form-label">Registrikood:</label>
                        <div class="col-sm-8">
                            <InputNumber class="form-control border" id="registryCode" @bind-Value="EditableCompany.RegistryCode" />
                        </div>
                    </div>
                    <div class="form-group row mb-3">
                        <label for="paymentType" class="col-sm-4 col-form-label">Makseviis:</label>
                        <div class="col-sm-8">
                            <InputSelect class="form-control border" id="paymentType" @bind-Value="EditableCompany.PaymentType">
                                <option value="BankTransfer">Bank Transfer</option>
                                <option value="Cash">Cash</option>
                            </InputSelect>
                        </div>
                    </div>
                    <div class="form-group row mb-3">
                        <label for="extraInfo" class="col-sm-4 col-form-label">Lisainfo</label>
                        <div class="col-sm-8">
                            <InputTextArea class="form-control border" id="extraInfo" @bind-Value="EditableCompany.ExtraInfo" rows="3" />
                        </div>
                    </div>
                    <button type="button" class="btn btn-secondary" @onclick="HandleReturn">Tagasi</button>
                    <button type="submit" class="btn btn-primary">Salvesta</button>
                </EditForm>
            </div>
        </div>
    </div>


}



@code {
    [Parameter]
    public string? Id { get; set; }

    public Company? Company { get; set; }
    private Company? EditableCompany { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (int.TryParse(Id, out var companyId))
        {
            Company = await CompanyService.GetCompanyAsync(companyId);  
            if (Company != null)
            {
                EditableCompany = new Company
                    {
                        ID = Company.ID,
                        CompanyName = Company.CompanyName,
                        RegistryCode = Company.RegistryCode,
                        PaymentType = Company.PaymentType,
                        ExtraInfo = Company.ExtraInfo
                    };
            }
        }
    }

    protected async Task HandleSubmit()
    {
        if (Id != null && EditableCompany != null)
        {
            Company = EditableCompany;
            Company.ID = int.Parse(Id);
            await CompanyService.UpdateCompanyAsync(Company.ID, Company);  
        }
    }
    private void HandleReturn()
    {
        NavigationManager.NavigateTo("/");
    }
}
